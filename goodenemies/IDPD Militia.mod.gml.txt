#define init
 // Define Sprites:
global.sprCommanderIdle         = sprite_add("IDPD Commander Idle.png",15,16,16);
global.sprCommanderWalk         = sprite_add("IDPD Commander Walk.png",6, 16,16);
global.sprCommanderHurt         = sprite_add("IDPD Commander Hurt.png",3, 16,16);
global.sprCommanderDead         = sprite_add("IDPD Commander Dead.png",6, 16,16);

global.sprMilitiaGun = sprite_add("IDPD Militia Gun.png ", 1, 19, 7);
global.sprMilitiaMissile = sprite_add("IDPD Militia Missile.png", 4, 8, 8);

#define militia_create(_x, _y)
	with instance_create(_x, _y, CustomEnemy){
		name = "Militia";				// Name
		team = 3;						// Team (IDPD)
		walk = 0;						// Walk
		male = choose(0,1);				// Male/Female (Sounds)
		depth = -2;						// Depth
		freeze = 0;						// Freeze
		wepflip = 1;					// Weapon Flip
		alarm1 = 0;						// Alarm 1 (Main Stuff)
		alarm2 = 30;					// Alarm 2 (Attack)
		alarm3 = 30;					// Alarm 3 (Secondary Attack)
		maxhealth = 80 + 40 * (GameCont.loops+ 1);	// Health
		gunangle = random(360);			// Gun Angle
		spr_shadow = shd24;				// Shadow Sprite
		mask_index = mskBandit;			// Hitbox
		
		wepangle = choose(-140,140)

		 // Define Sprites:
		spr_idle = global.sprCommanderIdle;
		spr_walk = global.sprCommanderWalk;
		spr_hurt = global.sprCommanderHurt;
		spr_dead = global.sprCommanderDead;

		 // Sounds:
		if(male){ // Male
			sound_play(sndGruntEnterM); // Entrance Sound
			snd_hurt = sndGruntHurtM;
			snd_dead = sndGruntDeadM;
		}
		else{ // Female
			sound_play(sndGruntEnterF); // Entrance Sound
			snd_hurt = sndGruntHurtF;
			snd_dead = sndGruntDeadF;
		}

		 // Draw Weapon:
		on_draw = script_ref_create(draw_militia);

		motion_add(random(360),4);
	}

#define step
with instances_matching(CustomEnemy, "name", "Militia"){
	// Set Sprites:
	if(nexthurt > current_frame){
		if(sprite_index != spr_hurt) image_index = 0;
		sprite_index = spr_hurt;
	}
	else{
		if(speed > friction) sprite_index = spr_walk;
		else sprite_index = spr_idle;
	}
	
	if(instance_exists(Player)) target = instance_nearest(x,y,Player);
	else target = 0;
	
	if(instance_exists(target) && distance_to_object(target) < 100) {
		targ_in_range = 1
	}
	else targ_in_range = 0
	
	if(instance_exists(target) && collision_line(x, y, target.x, target.y, Wall, 0, 0) < 0) targetvisible = 1;
	else targetvisible = 0;
	
	if(walk > 0){
		walk -= 1;
		motion_add(direction, 1);
	}
	if(speed > 4) speed = 4; // Max Speed
	
	if(my_health <= 0){
		for(i = 0; i < array_length_1d(global.IDPD); i++) with(global.IDPD[i]) freeze += 100;
		sound_stop(sndDragonLoop);
	}
	if(my_health < maxhealth) freeze += 1;
	with(Player){
		if(speed > 0) other.freeze += 1;
		if(can_shoot = 0) other.freeze += 3;
	}
	
	repeat (1) {
		var dodgethis = instance_nearest(x, y, projectile);
		if (dodgethis == noone) break;
		if (dodgethis.team == team) break;
		var dodgethis_x = dodgethis.x;
		var dodgethis_y = dodgethis.y;
		if (point_distance(x, y, dodgethis_x, dodgethis_y) >= 64) break;
		var projectiledir = point_direction(x, y, dodgethis_x, dodgethis_y);
		if (random(8) < 1 && abs(angle_difference(projectiledir, gunangle) < 100) && dodgethis.typ != 0) {
			scr_alarm2(projectiledir)
			alarm1 = 12
		} else if (random(5) < 1) {
			var _furthest = instance_furthest(x + random(120) - 60, y + random(120) - 60, Floor);
			if (_furthest != noone) {
				repeat (8) with (instance_create(x, y, Smoke)) motion_add(random(360), 1 + random(2));
				x = (_furthest.bbox_left + _furthest.bbox_right) / 2;
				y = (_furthest.bbox_top + _furthest.bbox_bottom) / 2;
				repeat (8) with (instance_create(x, y, Smoke)) motion_add(random(360), 1 + random(2));
			}
		} else if (_alarm[2] < 1) {
			direction = point_direction(x, y, dodgethis.hspeed, dodgethis.vspeed) + 180 + random(30) - 15;
			dodge = 4;
			_alarm[0] += 1;
		}
	}
}

// Spawning militia:
with instances_matching(ProtoStatue, "potentialmilitia", null){
	potentialmilitia = 1;
	if(GameCont.area = 5 && random(10) < (1 + GameCont.loops)) militia_create(x,y);
}
if(GameCont.loops = 1 && GameCont.area > 2 || GameCont.loops > 1) {
	with(IDPDSpawn) if(!elite && !freak && random(5) < 1 && alarm1 = 1 && "create_militia" not in self){
		alarm1 = 1000;
		instance_create(x,y,PortalClear);
		militia_create(x,y);
		create_militia = 1
	}
}

#define scr_alarm1



#define scr_alarm2(_a)



#define scr_alarm3(_a)



#define create_idpd_missile(_a)

with instance_create(x + lengthdir_x(16, _a), y + lengthdir_y(16, _a), CustomProjectile) {
	name = "MilitiaSeekerMissile";
	motion_add(_a, 2.5 + random(1.5))
	image_angle = direction
	team = other.team
	creator = other
	sprite_index = global.sprMilitiaMissile;
	mask_index = mskSeeker;
	hitid = [global.sprMilitiaMissile, "IDPD MISSILE"];
	image_speed = 0.4;
	damage = 2;
	force = 6;
	typ = 2;
	alarm0 = 180;

	bounce = 1
	alarm0 = 35
	hp = 5
	
	on_step = script_ref_create(idpd_missile_step);
	on_wall = script_ref_create(idpd_missile_wall);
	on_draw = script_ref_create(idpd_missile_draw);
	on_destroy = script_ref_create(idpd_missile_destroy);
}

#define idpd_missile_step
var target;
target=instance_nearest(x, y, Player)
if target!=noone {
    if !collision_line(x,y,target.x,target.y,Wall,1,1) {
    var targetdir, targetdist, changedir;
    targetdir=point_direction(x,y,target.x,target.y)
    targetdist=max(6,point_distance(x,y,target.x,target.y))+(0.04*power(abs(angle_difference(direction,targetdir)),1.2))
    targetdist/=2
    changedir=clamp(angle_difference(direction,targetdir),-360/targetdist,360/targetdist)
    direction-=changedir;
}}
direction+=4-random(8)
image_angle=direction

if random(4) < 1 && visible = 1 
instance_create(xprevious,yprevious,Dust)

if hp<=0 {instance_destroy(); exit}

//alarms
alarm0-=1
if alarm0=0 {bounce=0}

//collisions
if place_meeting(x,y,Explosion) {hp-=1}

#define idpd_missile_wall
instance_create(x,y,Dust)
if bounce = 1 {
    move_bounce_solid(1)
    bounce = 0
}
else {instance_destroy()}

#define idpd_missile_draw
draw_sprite_ext(sprScrapBossMissileTrail,-1,x,y,1,1,direction,c_white,1)
draw_self()

#define idpd_missile_destroy
sound_play(sndIDPDNadeExplo)
with instance_create(x-1+random(2),y-1+random(2),PopoExplosion) {
	image_xscale = 0.4
	image_yscale = 0.4
}

for (var j = random(160); j < 720; j += random(160)) {
	with instance_create(x + lengthdir_x(20, j), y + lengthdir_y(20, j), IDPDBullet) {
		motion_add(j, 5 + random(2))
		image_angle = direction
		team = other.team
		creator = other
	}
}

 // Draw Weapon:
#define draw_militia
// Weapon Kick:
if(alarm2 <= 1) wkick = 1.5;
else wkick = 0;

// Weapon Flip:
if(gunangle > 90 && gunangle < 270) wepflip = -1;
else wepflip = 1;

// Weapon:
	if(gunangle > 180) draw_sprite_ext(sprite_index, image_index, x, y, image_xscale * right, image_yscale, image_angle, image_blend, image_alpha);
	draw_sprite_ext(global.sprMilitiaGun, 0, x - lengthdir_x(wkick,gunangle), y - lengthdir_y(wkick,gunangle), 1, wepflip, gunangle, image_blend, image_alpha);
	if(gunangle <= 180) draw_sprite_ext(sprite_index, image_index, x, y, image_xscale * right, image_yscale, image_angle, image_blend, image_alpha);